services:
  database:
    profiles: 
    - ctfconsole
    - ctfconsole_database
    build: database
    image: ctfconsole_database:${VERSION}
    container_name: ctfconsole_database
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${CTFCONSOLE_DB_NAME}
      - POSTGRES_USER=${CTFCONSOLE_DB_USER}
      - POSTGRES_PASSWORD=${CTFCONSOLE_DB_PASSWORD}
      - POSTGRES_INITDB_WALDIR=${CTFCONSOLE_DB_LOG_PATH}
    volumes:
      - ctfconsole_data:${CTFCONSOLE_DB_LOG_PATH}
    ports:
      - ${CTFCONSOLE_DB_PORT}:${CTFCONSOLE_DB_PORT}
    networks:
      - ctfconsole
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${CTFCONSOLE_DB_NAME} -U ${CTFCONSOLE_DB_USER}" ]
      start_period: 5s
      timeout: 3s
      retries: 2
      interval: 5s
  backend:
    profiles: 
      - ctfconsole
      - ctfconsole_backend
    build: backend
    image: ctfconsole_backend:${VERSION}
    container_name: ctfconsole_backend
    env_file:
      - .env
    volumes:
      - ctfconsole_data:/var/log/ctfconsole/
      - ctfconsole_data:/opt/ctfconsole/database
    ports:
      - ${CTFCONSOLE_API_PORT}:${CTFCONSOLE_API_PORT}
    depends_on:
      database:
        condition: service_healthy
  frontend:
    profiles: 
      - ctfconsole
      - ctfconsole_frontend
    build: frontend
    image: ctfconsole_frontend:${VERSION}
    container_name: ctfconsole_frontend
    env_file:
      - .env
    environment:
      - PORT=${CTFCONSOLE_UI_PORT}
    volumes:
      - ./frontend/src:/opt/ctfconsole/src
      - ./frontend/public:/opt/ctfconsole/public
    ports:
      - ${CTFCONSOLE_UI_PORT}:${CTFCONSOLE_UI_PORT}

volumes:
  ctfconsole_data:
    name: ctfconsole_data

networks:
  ctfconsole: